{
	"id": "8bf95086-8e6e-4a0f-91ed-140e478ba565",
	"name": "Hiring Backend Test",
	"timestamp": "2023-03-11T15:47:11.220Z",
	"collection_id": "11687485-0763cbce-466e-4f0b-bec4-801b4b3fbc5e",
	"folder_id": 0,
	"environment_id": "11687485-4af33218-5e8e-4a84-8e7a-7565526b5e8f",
	"totalPass": 75,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2023-03-11T15:47:07.541Z",
	"totalFail": 0,
	"results": [
		{
			"id": "010bb01c-09aa-4253-9bc5-e1bb11ec922d",
			"name": "Authenticate",
			"url": "http://localhost:3000/users/authenticate",
			"time": 109,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Has credentials": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has credentials": true
				}
			]
		},
		{
			"id": "97517708-0356-4c2c-ba32-80c509e2c022",
			"name": "Authenticate - fail",
			"url": "http://localhost:3000/users/authenticate",
			"time": 66,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Has credentials": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				66
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has credentials": true
				}
			]
		},
		{
			"id": "271a6b14-a319-4c0a-a7c2-791a4ae237e0",
			"name": "Get Token",
			"url": "http://localhost:3000/users/token",
			"time": 67,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Has token": true,
				"Is JWT token": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has token": {
					"pass": 1,
					"fail": 0
				},
				"Is JWT token": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				67
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has token": true,
					"Is JWT token": true
				}
			]
		},
		{
			"id": "30efdd24-50ef-4bc4-90c8-a57fd1d6b827",
			"name": "Get Token - fail",
			"url": "http://localhost:3000/users/token",
			"time": 63,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Status code is 401": true,
				"Response has expected properties": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Response has expected properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Response has expected properties": true
				}
			]
		},
		{
			"id": "60d1ac40-7374-4fb6-84a6-2f2718ad3b2f",
			"name": "Validate Token",
			"url": "http://localhost:3000/users/validate",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response contains decodedToken": true,
				"decodedToken contains id and isAdmin properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains decodedToken": {
					"pass": 1,
					"fail": 0
				},
				"decodedToken contains id and isAdmin properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response contains decodedToken": true,
					"decodedToken contains id and isAdmin properties": true
				}
			]
		},
		{
			"id": "3a898fbe-1204-454d-bae5-bc0e8877fd12",
			"name": "Validate Token - fail",
			"url": "http://localhost:3000/users/validate",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Status code is 401": true,
				"Response contains error message": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Response contains error message": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Response contains error message": true
				}
			]
		},
		{
			"id": "3b774373-7582-4460-abb9-9792cc1642b9",
			"name": "Find only current user",
			"url": "http://localhost:3000/users/profile",
			"time": 17,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response should contain user object": true,
				"User object should have id, name, and email properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, and email properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response should contain user object": true,
					"User object should have id, name, and email properties": true
				}
			]
		},
		{
			"id": "432486d5-3535-4980-b597-1d2eaa69bf72",
			"name": "Ignore search for other",
			"url": "http://localhost:3000/users?id=[2]",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Status code is 403": true,
				"Response contains error message": true
			},
			"testPassFailCounts": {
				"Status code is 403": {
					"pass": 1,
					"fail": 0
				},
				"Response contains error message": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Status code is 403": true,
					"Response contains error message": true
				}
			]
		},
		{
			"id": "d5448730-22c3-4ada-9e09-239e90ad529d",
			"name": "Fail get on other id",
			"url": "http://localhost:3000/users/2",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Status code is 403": true,
				"Response contains error message": true
			},
			"testPassFailCounts": {
				"Status code is 403": {
					"pass": 1,
					"fail": 0
				},
				"Response contains error message": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Status code is 403": true,
					"Response contains error message": true
				}
			]
		},
		{
			"id": "e33b4cbb-8775-4460-aaf6-8fa059eea163",
			"name": "Get own user id",
			"url": "http://localhost:3000/users/ownUserId",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response should contain user object": true,
				"User object should have id, name, and email properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, and email properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response should contain user object": true,
					"User object should have id, name, and email properties": true
				}
			]
		},
		{
			"id": "17e47df8-d7e0-49dc-bae8-58919b987386",
			"name": "Update own name",
			"url": "http://localhost:3000/users/updateOwn",
			"time": 91,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response should contain user object": true,
				"User object should have id, name, and email properties": true,
				"Name is updated": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, and email properties": {
					"pass": 1,
					"fail": 0
				},
				"Name is updated": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response should contain user object": true,
					"User object should have id, name, and email properties": true,
					"Name is updated": true
				}
			]
		},
		{
			"id": "afc015f1-446f-4876-92eb-91895952f142",
			"name": "Authenticate",
			"url": "http://localhost:3000/users/authenticate",
			"time": 63,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Has credentials": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has credentials": true
				}
			]
		},
		{
			"id": "6b21de81-2b75-4956-a085-935a7c3b890f",
			"name": "Get Token",
			"url": "http://localhost:3000/users/token",
			"time": 63,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Has token": true,
				"Is JWT token": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has token": {
					"pass": 1,
					"fail": 0
				},
				"Is JWT token": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				63
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has token": true,
					"Is JWT token": true
				}
			]
		},
		{
			"id": "605bf38b-74da-4c13-933c-bd33d726cabe",
			"name": "login (extra)",
			"url": "http://localhost:3000/users/login",
			"time": 64,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Has token": true,
				"Is JWT token": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Has token": {
					"pass": 1,
					"fail": 0
				},
				"Is JWT token": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				64
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Has token": true,
					"Is JWT token": true
				}
			]
		},
		{
			"id": "9f15c089-81f4-4acd-9bb2-3df7a604d9f6",
			"name": "Validate Token",
			"url": "http://localhost:3000/users/validate",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response contains decodedToken": true,
				"decodedToken contains id and isAdmin properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains decodedToken": {
					"pass": 1,
					"fail": 0
				},
				"decodedToken contains id and isAdmin properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response contains decodedToken": true,
					"decodedToken contains id and isAdmin properties": true
				}
			]
		},
		{
			"id": "f22c3dce-1e54-44dc-8603-3a120decd215",
			"name": "Find only current user",
			"url": "http://localhost:3000/users/profile",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response should contain user object": true,
				"User object should have id, name, and email properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, and email properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response should contain user object": true,
					"User object should have id, name, and email properties": true
				}
			]
		},
		{
			"id": "97fc57c1-6187-49e5-a69b-dba36f06c539",
			"name": "Create new user",
			"url": "http://localhost:3000/users",
			"time": 277,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code is 201": true,
				"Response should contain user object": true,
				"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": true,
				"Check name value": true,
				"Check email value": true
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": {
					"pass": 1,
					"fail": 0
				},
				"Check name value": {
					"pass": 1,
					"fail": 0
				},
				"Check email value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				277
			],
			"allTests": [
				{
					"Status code is 201": true,
					"Response should contain user object": true,
					"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": true,
					"Check name value": true,
					"Check email value": true
				}
			]
		},
		{
			"id": "55812583-68a7-4ecb-8134-ddc5709fb4d0",
			"name": "Create new user - fail",
			"url": "http://localhost:3000/users",
			"time": 232,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Error response should contain correct error information": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Error response should contain correct error information": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				232
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Error response should contain correct error information": true
				}
			]
		},
		{
			"id": "93539278-d100-44f2-abe0-fccb448dc6c7",
			"name": "Find all users",
			"url": "http://localhost:3000/users",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response has a users array": true,
				"Users array has at least one user": true,
				"Response has a totalCount property": true,
				"totalCount property is a number": true,
				"totalCount should be equal or bigger than number of users": true,
				"First user has expected properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response has a users array": {
					"pass": 1,
					"fail": 0
				},
				"Users array has at least one user": {
					"pass": 1,
					"fail": 0
				},
				"Response has a totalCount property": {
					"pass": 1,
					"fail": 0
				},
				"totalCount property is a number": {
					"pass": 1,
					"fail": 0
				},
				"totalCount should be equal or bigger than number of users": {
					"pass": 1,
					"fail": 0
				},
				"First user has expected properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response has a users array": true,
					"Users array has at least one user": true,
					"Response has a totalCount property": true,
					"totalCount property is a number": true,
					"totalCount should be equal or bigger than number of users": true,
					"First user has expected properties": true
				}
			]
		},
		{
			"id": "b26ab12d-65c5-4d9d-80f9-a87a82374b25",
			"name": "Find all users containing ma in name",
			"url": "http://localhost:3000/users?name=ma",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response has a users array": true,
				"Users array has at least one user": true,
				"Response has a totalCount property": true,
				"totalCount property is a number": true,
				"totalCount should be equal or bigger than number of users": true,
				"First user has expected properties": true,
				"Names should contain 'ma'": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response has a users array": {
					"pass": 1,
					"fail": 0
				},
				"Users array has at least one user": {
					"pass": 1,
					"fail": 0
				},
				"Response has a totalCount property": {
					"pass": 1,
					"fail": 0
				},
				"totalCount property is a number": {
					"pass": 1,
					"fail": 0
				},
				"totalCount should be equal or bigger than number of users": {
					"pass": 1,
					"fail": 0
				},
				"First user has expected properties": {
					"pass": 1,
					"fail": 0
				},
				"Names should contain 'ma'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response has a users array": true,
					"Users array has at least one user": true,
					"Response has a totalCount property": true,
					"totalCount property is a number": true,
					"totalCount should be equal or bigger than number of users": true,
					"First user has expected properties": true,
					"Names should contain 'ma'": true
				}
			]
		},
		{
			"id": "549f6e0a-1d50-43a4-b137-4b0ce7e23137",
			"name": "Get specific user",
			"url": "http://localhost:3000/users/167",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response should contain user object": true,
				"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response should contain user object": true,
					"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": true
				}
			]
		},
		{
			"id": "a8ad226f-70e5-4f9c-92f8-287dc592ac44",
			"name": "Get specific user - fail",
			"url": "http://localhost:3000/users/10000",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response has status code 404": true,
				"Response has expected message and error properties": true
			},
			"testPassFailCounts": {
				"Response has status code 404": {
					"pass": 1,
					"fail": 0
				},
				"Response has expected message and error properties": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Response has status code 404": true,
					"Response has expected message and error properties": true
				}
			]
		},
		{
			"id": "9f888fb8-2fff-42bb-b96b-8194cc5a56fe",
			"name": "Update a user name",
			"url": "http://localhost:3000/users/167",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response should contain user object": true,
				"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": true,
				"Name is updated": true,
				"Updated At != Created At": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response should contain user object": {
					"pass": 1,
					"fail": 0
				},
				"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": {
					"pass": 1,
					"fail": 0
				},
				"Name is updated": {
					"pass": 1,
					"fail": 0
				},
				"Updated At != Created At": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response should contain user object": true,
					"User object should have id, name, email, email_confirmed, is_admin, created_at, and updated_at properties": true,
					"Name is updated": true,
					"Updated At != Created At": true
				}
			]
		},
		{
			"id": "42938ea7-cae3-48f2-b74b-8384a0245b8d",
			"name": "Delete that user",
			"url": "http://localhost:3000/users/167",
			"time": 164,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				164
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 1424,
	"collection": {
		"requests": [
			{
				"id": "010bb01c-09aa-4253-9bc5-e1bb11ec922d",
				"method": "POST"
			},
			{
				"id": "97517708-0356-4c2c-ba32-80c509e2c022",
				"method": "POST"
			},
			{
				"id": "271a6b14-a319-4c0a-a7c2-791a4ae237e0",
				"method": "POST"
			},
			{
				"id": "30efdd24-50ef-4bc4-90c8-a57fd1d6b827",
				"method": "POST"
			},
			{
				"id": "60d1ac40-7374-4fb6-84a6-2f2718ad3b2f",
				"method": "POST"
			},
			{
				"id": "3a898fbe-1204-454d-bae5-bc0e8877fd12",
				"method": "POST"
			},
			{
				"id": "3b774373-7582-4460-abb9-9792cc1642b9",
				"method": "GET"
			},
			{
				"id": "432486d5-3535-4980-b597-1d2eaa69bf72",
				"method": "GET"
			},
			{
				"id": "d5448730-22c3-4ada-9e09-239e90ad529d",
				"method": "GET"
			},
			{
				"id": "e33b4cbb-8775-4460-aaf6-8fa059eea163",
				"method": "GET"
			},
			{
				"id": "17e47df8-d7e0-49dc-bae8-58919b987386",
				"method": "PATCH"
			},
			{
				"id": "afc015f1-446f-4876-92eb-91895952f142",
				"method": "POST"
			},
			{
				"id": "6b21de81-2b75-4956-a085-935a7c3b890f",
				"method": "POST"
			},
			{
				"id": "605bf38b-74da-4c13-933c-bd33d726cabe",
				"method": "POST"
			},
			{
				"id": "9f15c089-81f4-4acd-9bb2-3df7a604d9f6",
				"method": "POST"
			},
			{
				"id": "f22c3dce-1e54-44dc-8603-3a120decd215",
				"method": "GET"
			},
			{
				"id": "97fc57c1-6187-49e5-a69b-dba36f06c539",
				"method": "POST"
			},
			{
				"id": "55812583-68a7-4ecb-8134-ddc5709fb4d0",
				"method": "POST"
			},
			{
				"id": "93539278-d100-44f2-abe0-fccb448dc6c7",
				"method": "GET"
			},
			{
				"id": "b26ab12d-65c5-4d9d-80f9-a87a82374b25",
				"method": "GET"
			},
			{
				"id": "549f6e0a-1d50-43a4-b137-4b0ce7e23137",
				"method": "GET"
			},
			{
				"id": "a8ad226f-70e5-4f9c-92f8-287dc592ac44",
				"method": "GET"
			},
			{
				"id": "9f888fb8-2fff-42bb-b96b-8194cc5a56fe",
				"method": "PATCH"
			},
			{
				"id": "42938ea7-cae3-48f2-b74b-8384a0245b8d",
				"method": "DELETE"
			}
		]
	}
}